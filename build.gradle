plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.15'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'jacoco'
}

group = 'ai'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    implementation group: 'com.auth0', name: 'java-jwt', version: '4.2.1'

    testCompileOnly 'org.projectlombok:lombok' // 테스트 의존성 추가
    testAnnotationProcessor 'org.projectlombok:lombok' // 테스트 의존성 추가

    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2' // swagger
    implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2' //swagger

}

tasks.named('test') {
    useJUnitPlatform()
}

jacoco {
    toolVersion = "0.8.8"
}

jacocoTestReport {
    reports {
        html.required.set(true)
        xml.required.set(true)
        csv.required.set(false)

//        xml.destination file("${buildDir}/jacoco/index.xml")
//        csv.destination file("${buildDir}/jacoco/index.csv")
        html.destination file("${buildDir}/jacoco/index.html")
    }
    finalizedBy 'jacocoTestCoverageVerification'
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            enabled = true
            element = 'CLASS'

            limit {
                counter = 'METHOD'
                value = 'COVEREDRATIO'
                minimum = 0.0
            }

            excludes = [
                    '*.config.*',
                    '*.dto.*',
                    '*.handler.*',
                    '*.util.*',
                    '*.domain.account.Account',
                    '*.domain.transaction.Transaction',
                    '*.domain.user.User',
                    '*.service.AccountService',
                    '*.service.TransactionService',
                    '*.*Application',
                    '*.*Enum',
//					'*.*Exception',
//					'*.*Advice',
//					'*.*Config',
//					'*.*Dto',
//					'*.*Util',
//					'*.*Filter',
//					'*.*Object',
//					'*.*Init',
            ]
        }
        rule {

        }
    }
}